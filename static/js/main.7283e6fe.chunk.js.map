{"version":3,"sources":["components/Product-table.js","components/Products.js","App.js","reportWebVitals.js","index.js"],"names":["ProductCategoryRow","category","this","props","colSpan","className","React","Component","ProductRow","product","name","stocked","style","color","textShadow","price","ProductTable","lastCategory","filterText","inStockOnly","rows","products","forEach","toLowerCase","indexOf","push","SearchBar","type","placeholder","value","onChange","filterTextChange","checked","inStockChange","FilterableProductTable","state","event","setState","target","console","log","PRODUCTS","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.7283e6fe.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass ProductCategoryRow extends React.Component {\r\n    render() {\r\n        const category = this.props.category;\r\n        return (\r\n            <tr>\r\n                <td colSpan='2' className='product-category'>{category}</td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nclass ProductRow extends React.Component {\r\n    render() {\r\n        const product = this.props.product;\r\n        const name = product.stocked ? product.name :\r\n            <span style={{ color: 'red', textShadow: '0.5px 0.5px 1px black' }}>{product.name}</span>;\r\n        const price = product.price;\r\n        return (\r\n            <tr>\r\n                <td>{name}</td>\r\n                <td>{price}</td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nclass ProductTable extends React.Component {\r\n    render() {\r\n        const filterText = this.props.filterText;\r\n        const inStockOnly = this.props.inStockOnly;\r\n        const rows = [];\r\n        let lastCategory;\r\n        this.props.products.forEach((product) => {\r\n            if (product.name.toLowerCase().indexOf(filterText.toLowerCase()) === -1) {\r\n                return\r\n            }\r\n            if (inStockOnly && !product.stocked) {\r\n                return\r\n            }\r\n            if (product.category !== lastCategory) {\r\n                rows.push(\r\n                    <ProductCategoryRow\r\n                        category={product.category}\r\n                        key={product.category} />\r\n                )\r\n            }\r\n            rows.push(\r\n                <ProductRow\r\n                    product={product}\r\n                    key={product.name} />\r\n            )\r\n            lastCategory = product.category;\r\n        })\r\n        return (\r\n            <table>\r\n                <thead>\r\n                    <tr>\r\n                        <th>Name</th>\r\n                        <th>Price</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>\r\n                    {rows}\r\n                </tbody>\r\n            </table>\r\n        )\r\n    }\r\n}\r\n\r\nclass SearchBar extends React.Component {\r\n    render() {\r\n        const filterText = this.props.filterText;\r\n        const inStockOnly = this.props.inStockOnly;\r\n        return (\r\n            <form>\r\n                <input\r\n                    type='text'\r\n                    placeholder='Search...'\r\n                    value={filterText}\r\n                    onChange={this.props.filterTextChange}\r\n                />\r\n                <p>\r\n                    <input\r\n                        type='checkbox'\r\n                        checked={inStockOnly}\r\n                        onChange={this.props.inStockChange}\r\n                    />\r\n                 Only show products in stock\r\n                </p>\r\n            </form>\r\n        )\r\n    }\r\n}\r\n\r\nexport default class FilterableProductTable extends React.Component {\r\n    state = {\r\n        filterText: '',\r\n        inStockOnly: false\r\n    }\r\n\r\n    filterTextChange = (event) => {\r\n        this.setState({\r\n            filterText: event.target.value\r\n        })\r\n    }\r\n\r\n    inStockChange = () => {\r\n        this.setState((state) => ({\r\n            inStockOnly: !state.inStockOnly\r\n        }))\r\n    }\r\n    render() {\r\n        console.log(this.state)\r\n        return (\r\n            <div className='productTableContainer'>\r\n                <SearchBar\r\n                    filterText={this.state.filterText}\r\n                    inStockOnly={this.state.inStockOnly}\r\n                    filterTextChange={this.filterTextChange}\r\n                    inStockChange={this.inStockChange}\r\n                />\r\n                <ProductTable\r\n                    products={this.props.products}\r\n                    filterText={this.state.filterText}\r\n                    inStockOnly={this.state.inStockOnly}\r\n                />\r\n            </div>\r\n        );\r\n    }\r\n}","const PRODUCTS = [\r\n    { category: 'Sporting Goods', price: '$49.99', stocked: true, name: 'Football' },\r\n    { category: 'Sporting Goods', price: '$9.99', stocked: true, name: 'Baseball' },\r\n    { category: 'Sporting Goods', price: '$29.99', stocked: false, name: 'Basketball' },\r\n    { category: 'Electronics', price: '$99.99', stocked: true, name: 'iPod Touch' },\r\n    { category: 'Electronics', price: '$399.99', stocked: false, name: 'iPhone 5' },\r\n    { category: 'Electronics', price: '$199.99', stocked: true, name: 'Nexus 7' },\r\n    { category: 'Sex Toys', price: '$100.99', stocked: true, name: 'Big Dick' }\r\n];\r\n\r\nexport default PRODUCTS;","import './App.css';\nimport React from 'react';\nimport FilterableProductTable from './components/Product-table';\nimport PRODUCTS from './components/Products';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <FilterableProductTable products={PRODUCTS} />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}